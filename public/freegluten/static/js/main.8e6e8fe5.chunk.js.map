{"version":3,"sources":["components/Restaurants.js","App.js","reportWebVitals.js","index.js"],"names":["Restaurants","props","openUrl","url","window","open","copyNumber","num","ind","phoneNumber","document","getElementById","classList","remove","select","setSelectionRange","execCommand","add","querySelector","setAttribute","state","rests","index","id","this","map","rest","pho","phone","length","phoneSplit","split","newphone","i","push","join","splice","className","alt","name","src","image_url","onClick","location","display_address","Math","random","data-tooltip","readOnly","type","value","rating","review_count","undefined","price","sign","React","Component","App","getLocation","pos","setState","latitude","coords","longitude","getGluten","a","fetching","businesses","fetch","then","res","json","catch","err","console","log","getVegan","navigator","geolocation","getCurrentPosition","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8e6e8fe5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Restaurants extends React.Component{\r\n    constructor(props){\r\n        super();\r\n        this.state = {\r\n            rests: props.rests\r\n        }\r\n    }\r\n\r\n    // componentDidMount(){\r\n    //     console.log(this.state);\r\n    // }\r\n\r\n    openUrl = (url) => {\r\n        window.open(url);\r\n    }\r\n\r\n    copyNumber = (num, ind) => {\r\n        let phoneNumber = document.getElementById(`i-${ind}`);\r\n        phoneNumber.classList.remove('hide');\r\n        phoneNumber.select();\r\n        phoneNumber.setSelectionRange(0, 9999);\r\n        document.execCommand('copy');\r\n        phoneNumber.classList.add('hide');\r\n        const tooltip = document.querySelector(`#c-${ind}`);\r\n        tooltip.setAttribute('data-tooltip', 'Number Copied');\r\n    }\r\n\r\n    render(){\r\n        let index = 0;\r\n        return (\r\n        <>\r\n            <div id=\"div-restaurants-container\">\r\n                {this.state.rests.map((rest) => {\r\n                    let pho = index;\r\n                    index += 1;\r\n                    let phone = '';\r\n                    if (rest.phone.length > 0){\r\n                        phone = rest.phone.split('+')[1];\r\n                        let phoneSplit = phone.split('');\r\n                        while (phoneSplit.length > 10){\r\n                            let newphone = [];\r\n                            for (let i = 1; i < phoneSplit.length; i++){\r\n                                newphone.push(phoneSplit[i]);\r\n                            };\r\n                            phone = newphone.join('');\r\n                            phoneSplit = phone.split('');\r\n                        }\r\n                        phone = phone.split('');\r\n                        phone.splice(3, 0, \"-\");\r\n                        phone.splice(7, 0, \"-\")\r\n                        phone = phone.join('');\r\n                    }\r\n                    return (\r\n                        <div key={Math.random()} className=\"div-restaurant\">\r\n                            <img alt={`${rest.name}`} className=\"img-restaurant\" src={rest.image_url}/>\r\n                            <div className=\"div-restaurant-info\">\r\n                                <div className=\"div-info-1\">\r\n                                    <h3 onClick={() => this.openUrl(rest.url)} className=\"h3-restaurant-name\">{rest.name}</h3>\r\n                                    <div className=\"div-restaurant-address\">\r\n                                        {rest.location.display_address.map((add) => {\r\n                                            return (\r\n                                                <p key={Math.random()} className=\"p-restaurant-address\">{add}</p>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"div-info-2\">\r\n                                    <div className=\"div-phone-container\">\r\n                                        <img className=\"img-phone\" src=\"https://bernardmurphy.net/assets/phoneicontrans.png\" alt=\"phone\"/>\r\n                                        <p className=\"p-phone\">{phone}</p>\r\n                                        <button id={`c-${pho}`} data-tooltip=\"Copy to Clipboard\" className=\"button-copy\" onClick={() => this.copyNumber(phone, pho)}>Copy number</button>\r\n                                        <input readOnly type=\"text\" className=\"hide\" value={phone} id={`i-${pho}`}/>\r\n                                    </div>\r\n                                    <div className=\"div-rating-container\">\r\n                                        <div className=\"div-rating-top\">\r\n                                            <p className=\"p-rating-word\">Rating:</p>\r\n                                            <img alt={`${rest.rating} stars`} className=\"img-rating\" src={`https://bernardmurphy.net/assets/yelp_stars/use/${rest.rating}.png`}/>\r\n                                        </div>\r\n                                        <div className=\"div-rating-bottom\">\r\n                                            <p className=\"p-rating-number\">{`(${rest.review_count} reviews)`}</p>\r\n                                            <img onClick={() => this.openUrl(rest.url)} alt=\"Yelp\" className=\"img-yelp\" src=\"https://bernardmurphy.net/assets/yelp-logo.png\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                    {(rest.price !== undefined) ?\r\n                                        <div className=\"div-price-container\">\r\n                                            <p className=\"p-price-word\">Price:</p>\r\n                                            <p className=\"p-price-signs\">{rest.price.split('').map((sign) => {return '$'})}</p>\r\n                                        </div> : \r\n                                        <></>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })} \r\n            </div>\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Restaurants;","import React from 'react';\nimport './App.css';\nimport Restaurants from './components/Restaurants';\n// import yelp from 'yelp-fusion';\n// import axios from 'axios';\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      latitude: 0,\n      longitude: 0,\n      businesses: [],\n      fetching: false\n    };\n  }\n\n  getLocation = (pos) => {\n    this.setState({\n      latitude: pos.coords.latitude,\n      longitude: pos.coords.longitude\n    })\n  }\n\n  getGluten = async () => {\n    if (this.state.fetching === false){\n      this.setState({\n        ...this.state,\n        fetching: true,\n        businesses: []\n      })\n      fetch(`https://bernardmurphy.net/glutenfree/${this.state.latitude}/${this.state.longitude}`).then(async res => {\n        const rests = await res.json();\n        this.setState({\n          ...this.state,\n          businesses: rests.rests.businesses,\n          fetching: false\n        })\n  \n      }).catch(err => {\n        console.log(err);\n      })\n    }\n  }\n\n  getVegan = async () => {\n    if (this.state.fetching === false){\n      this.setState({\n        ...this.state,\n        fetching: true,\n        businesses: []\n      })\n      fetch(`https://bernardmurphy.net/vegan/${this.state.latitude}/${this.state.longitude}`).then(async res => {\n        const rests = await res.json();\n        this.setState({\n          ...this.state,\n          businesses: rests.rests.businesses,\n          fetching: false\n        })\n      }).catch(err => {\n        console.log(err);\n      })\n    }\n  }\n\n  componentDidMount(){\n    navigator.geolocation.getCurrentPosition(this.getLocation);\n  }\n\n\n  render(){\n    return (\n      <>\n        <h1 id=\"h1-specoresto\">Specoresto</h1>\n        <div id=\"div-button-container\">\n          <button id=\"button-gluten-free\" onClick={this.getGluten}>Gluten Free Restaurants Near Me</button>\n          <button id=\"button-vegan\" onClick={this.getVegan}>Vegan Restaurants Near Me</button>\n        </div>\n        {this.state.businesses.length ? <Restaurants rests={this.state.businesses}/> : (this.state.fetching === true) ? <p className=\"p-fetching\">Fetching Restaurants. Please Wait...</p> : <></>}\n      </>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}